name: PR Validation Workflow

on:
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: '9.0.100'

jobs:
  validate:
    name: Validate .NET Web API Before Merge
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Dependencies
        run: dotnet restore

      # Step 1: Code structure check
      - name: Run dotnet format (check code style)
        run: dotnet format --verify-no-changes --severity error

      - name: Build project and validate analyzers
        run: dotnet build --no-restore -warnaserror

      # Step 2: Check for <summary> in all controller methods
      - name: Check for XML summary comments in Controllers
        run: |
          echo "Checking for <summary> tags in controller files..."
          files=$(find ./Git_Workflows.API/Controllers -name "*.cs" -exec grep -L "<summary>" {} \; || true)
          if [[ -n "$files" ]]; then
            echo "Missing <summary> comments in the following files:"
            echo "$files"
            exit 1  # This causes the workflow to fail
          else
            echo "All controller files contain <summary> comments."
          fi

      # Step 3: Check API Route Naming Pattern and Uniqueness
      - name: Check API Route Naming Pattern and Uniqueness
        run: |
          echo "Validating API route naming, presence, and duplicates..."
          
          # Regex to enforce lowercase-only API routes: api/something or api/something/else, with no digits or uppercase
          ROUTE_REGEX='Route\("([a-z-]+)"\)'  # accepts hyphens in controller names, no numbers or uppercase letters
          MAIN_ROUTE_REGEX='^\[Route\("api/[a-z-]+\"\)]'   # main route must start with 'api/'
          DUPLICATE_CHECK_FILE="all_routes.tmp"
          > $DUPLICATE_CHECK_FILE
          
          has_errors=0
          
          for file in ./Git_Workflows.API/Controllers/*.cs; do
            echo "Checking $file"
          
            # 1. Check for improperly named method routes (uppercase, digits, etc.)
            invalid_routes=$(grep -EL "$ROUTE_REGEX" "$file" || true)
            if [[ -n "$invalid_routes" ]]; then
              echo "Invalid route pattern found (uppercase, digits, etc.) in methods in $file:"
              echo "$invalid_routes"
              has_errors=1
            fi

            # 2. Check if the controller has a valid main route
            main_route=$(grep -E "$MAIN_ROUTE_REGEX" "$file" || true)
            if [[ -z "$main_route" ]]; then
              echo "Missing or invalid main route in controller in $file (should start with 'api/')"
              has_errors=1
            fi
          done
          
          # Check for duplicates - Ensure this check runs after the loop finishes
          if [[ $has_errors -eq 1 ]]; then
            echo "Errors found in route naming patterns."
            exit 1
          fi
      
          rm -f $DUPLICATE_CHECK_FILE
          echo "All routes are valid, lowercase, unique, and have proper route names."